export const MODBUS_TCP_CONNECT_TIMEOUT = 100;

export const REGISTER_OFFSET = -1;

export const EXCEPTION_CODE = 0x80;

export const ERROR_CODE_UNKNOWN = 999;

export enum MB_FUNCTION {
  READ_COILS = 1,
  READ_DISCRETE_INPUTS = 2,
  READ_HOLDING_REGISTERS = 3,
  READ_INPUT_REGISTERS = 4,
  WRITE_SINGLE_COIL = 5,
  WRITE_SINGLE_HOLDING = 6,
  READ_EXCEPTION_STATUS = 7,
  WRITE_MULTIPLE_COILS = 15,
  WRITE_MULTIPLE_HOLDING = 16,
  READ_FILE = 20,
  WRITE_FILE = 21,
  READ_DEVICE_ID = 43,
  READ_COMPRESSED = 65,
  READ_DANFOSS_EXCEPTION_STATUS = 67,
  EXCEPTION_READ_COILS = EXCEPTION_CODE + READ_COILS,
  EXCEPTION_READ_DISCRETE_INPUTS = EXCEPTION_CODE + READ_DISCRETE_INPUTS,
  EXCEPTION_READ_HOLDING_REGISTERS = EXCEPTION_CODE + READ_HOLDING_REGISTERS,
  EXCEPTION_READ_INPUT_REGISTERS = EXCEPTION_CODE + READ_INPUT_REGISTERS,
  EXCEPTION_WRITE_SINGLE_COIL = EXCEPTION_CODE + WRITE_SINGLE_COIL,
  EXCEPTION_WRITE_SINGLE_HOLDING = EXCEPTION_CODE + WRITE_SINGLE_HOLDING,
  EXCEPTION_READ_EXCEPTION_STATUS = EXCEPTION_CODE + READ_EXCEPTION_STATUS,
  EXCEPTION_READ_DANFOSS_EXCEPTION_STATUS = EXCEPTION_CODE + READ_DANFOSS_EXCEPTION_STATUS,
  EXCEPTION_WRITE_MULTIPLE_COILS = EXCEPTION_CODE + WRITE_MULTIPLE_COILS,
  EXCEPTION_WRITE_MULTIPLE_HOLDING = EXCEPTION_CODE + WRITE_MULTIPLE_HOLDING,
  EXCEPTION_READ_FILE = EXCEPTION_CODE + READ_FILE,
  EXCEPTION_WRITE_FILE = EXCEPTION_CODE + WRITE_FILE,
  EXCEPTION_READ_DEVICE_ID = EXCEPTION_CODE + READ_DEVICE_ID,
  EXCEPTION_READ_COMPRESSED = EXCEPTION_CODE + READ_COMPRESSED,
}

export const EXCEPTION_CODES: {[key: number]: string} = {
  1: 'Illegal Function',
  2: 'Illegal Data Address',
  3: 'Illegal Data Value',
  4: 'Slave Device Failure',
  5: 'Acknowledge',
  6: 'Slave Device Busy',
  7: 'Negative Acknowledge',
  8: 'Memory Parity Error',
  10: 'Gateway Path Unavailable',
  11: 'Gateway Target Device Failed to Respond',
};

export enum FRAME_TYPE {
  UNKNOWN = 0,
  REQUEST = 1,
  RESPONSE = 2,
}
